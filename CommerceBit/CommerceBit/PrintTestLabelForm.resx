<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>